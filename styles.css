@font-face {
    font-family: 'Roboto';
    src: url('fonts/Roboto-Regular.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
}

@font-face {
    font-family: 'Roboto';
    src: url('fonts/Roboto-Bold.ttf') format('truetype');
    font-weight: bold;
    font-style: normal;
}

@font-face {
    font-family: 'Inter';
    src: url('fonts/Inter_18pt-Regular.ttf') format('truetype');
    font-weight: normal;
}

body, html {
    margin: 0;
    padding: 0;
    height: 100%;
    overflow: hidden;
    font-family: Arial, sans-serif;
    background-color: #03050a; /* Dark mode by default */
    color: white;
}

.container {
    display: flex;
    height: 100vh;
}

.left-side {
    flex: 1;
    background-color: #03050a;
    padding: 10px; /* Reduced padding to bring items closer */
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    position: relative;
}

.right-side {
    flex: 2;
    background-color: #03050a;
    position: relative;
    overflow: hidden;
}

.right-side::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(to right, #03050a, rgba(3, 5, 10, 0));
    z-index: 2;
}

.background-video {
    position: absolute;
    top: 0;
    right: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    opacity: 0;
    transition: opacity 1s ease-in-out;
}

.background-video.active {
    opacity: 0.75;
    z-index: 1;
    
}

.project-info {
    position: absolute;
    bottom: 20px;
    right: 20px;
    color: white; /* Keep project info white at all times */
    text-align: right;
    text-shadow: 1px 1px 2px rgba(0,0,0,0.8);
    z-index: 3;
}

.project-name, .project-date {
    color: white !important; /* Explicitly keep white text */
}

.project-name {
    font-family: 'Roboto', sans-serif;
    font-size: 24px;
    font-weight: bold;
    margin-bottom: 5px;
}

.project-date {
    font-family: 'Inter', sans-serif;
    font-size: 18px;
}

@media (max-width: 768px) {
    .right-side {
        display: none; /* Hide the right side on mobile */
    }

    .project-info {
        display: none; /* Also hide the project info */
    }

    .project-name {
        display: none; /* Also hide the project info */
    }
}


.profile-image {
    width: 150px;
    height: 150px;
    border-radius: 50%;
    object-fit: cover;
    margin-bottom: 20px;
    z-index: 2;
}

.name {
    font-family: 'Roboto', sans-serif;
    font-size: 24px;
    font-weight: bold;
    color: white;
    margin-bottom: 10px;
    z-index: 2;
}

.about-me {
    font-family: 'Inter', sans-serif;
    font-size: 16px;
    color: rgb(205, 205, 205);
    text-align: center;
    max-width: 80%;
    margin-bottom: 20px; /* Reduced bottom margin */
    z-index: 2;
}

.button-container {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 10px;
    position: absolute;
    bottom: 20px;
    left: 0;
    right: 0;
    z-index: 2;
}

.button-container img {
    width: 40px;
    height: 40px;
    cursor: pointer;
    border-radius: 8px;
    filter: invert(0); /* Start as white (for dark mode) */
    transition: transform 0.3s; /* Only transition for scaling effect */
    z-index: 2;
}

.button-container img:hover {
    transform: scale(1.1);
}

/* Light mode changes button images to black */
.light-mode .button-container img {
    filter: invert(1); /* Switch to dark (black) for light mode */
}

.light-mode {
    background-color: #f4f4f4;
    color: #000;
}

.light-mode .left-side {
    background-color: #f4f4f4;
}

.light-mode .right-side::before {
    background: linear-gradient(to right, #f4f4f4, rgba(244, 244, 244, 0)); /* Match left-side background */
}

.light-mode .name, .light-mode .about-me {
    color: #181818; /* Change left-side text to black */
}

.about-line {
    width: 100%;
    border: 1px solid rgba(255, 255, 255, 0.6); /* Match the line color with text */
    margin: 20px 0; /* Add some spacing around the line */
    z-index: 2;
}

.skills-section {
    display: flex; /* Use flexbox for horizontal layout */
    justify-content: space-between; /* Space out the items evenly */
    margin-top: 10px; /* Reduced top margin */
    z-index: 2;
    width: 100%; /* Ensure the section takes full width */
}

.skills-category {
    flex: 1; /* Allow each category to grow equally */
    margin: 0 5px; /* Reduced margin between categories */
    text-align: center; /* Center align text */
    z-index: 2;
}

.skills-icon {
    width: 50px; /* Set a width for the images */
    height: 50px; /* Set a height for the images */
    margin-bottom: 10px; /* Space between icon and header */
    z-index: 2;
}

.skills-header {
    font-family: 'Roboto', sans-serif; /* Use the same font */
    font-size: 18px; /* Make the header larger */
    font-weight: bold; /* Bold for emphasis */
    margin-top: 10px; /* Reduced space above the header */
    margin-bottom: 5px; /* Keep space below the header */
    color: white; /* Default to white for dark mode */
    z-index: 2;
}

.skills-list {
    font-family: 'Inter', sans-serif;
    font-size: 16px;
    list-style-type: none; /* Use bullet points */
    margin: 0; /* Reset margin on the list */
    padding-left: 0; /* Remove default padding */
    color: rgb(205, 205, 205); /* Keep the list items white */
    z-index: 2;
}

.skills-list li {
    margin-bottom: 5px; /* Add spacing between each list item */
    z-index: 2;
}

/* Light Mode Styles */
.light-mode .skills-header {
    color: #000; /* Change header color to black */
}

.light-mode .skills-list {
    color: #181818; /* Change list item color to black */
}

/* Light mode changes icon colors */
.light-mode .skills-icon {
    filter: invert(1); /* Switch to dark (black) for light mode */
}

.light-mode .about-line {
    filter: invert(1); /* Switch to dark (black) for light mode */
}

.moving-node {
    position: absolute;
    width: 4px; /* Smaller size for the node */
    height: 4px; /* Smaller size for the node */
    background-color: rgba(25, 25, 25, 1); /* Brighter color and fully opaque */
    border-radius: 50%; /* Make them circular */
    z-index: 1; /* Position them behind text/images but above the background */
}

.light-mode .moving-node {
    filter: invert(1);
}

.connection-line {
    stroke: rgba(25, 25, 25, 1); /* Default line color for dark mode */
}

/* Light mode styles for connection lines */
.light-mode .connection-line {
    filter: invert(1);
}

.projects-button {
    background-color: transparent; /* Transparent background */
    color: white; /* Text color */
    border: 1px solid white; /* White border */
    border-radius: 5px; /* Rounded corners */
    padding: 10px 15px; /* Padding for the button */
    font-family: 'Roboto', sans-serif; /* Same font as before */
    font-size: 24px; /* Font size */
    cursor: pointer; /* Pointer cursor on hover */
    transition: background-color 0.3s, color 0.3s; /* Smooth transition */
    display: block; /* Block display */
    margin: 10px auto; /* Center the button */
    z-index: 2;
}

.light-mode .projects-button {
    filter: invert(1);
}

.projects-button:hover {
    background-color: rgba(255, 255, 255, 0.1); /* Slightly darker on hover */
    color: white; /* Keep text white on hover */
}

.button {
    position: relative; /* To position the text above the button */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    z-index: 2;
}

.button-text {
    position: absolute;
    bottom: 60px; /* Adjust as needed to position above the button */
    font-family: 'Roboto', sans-serif;
    font-size: 14px;
    color: white;
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
    pointer-events: none; /* So the hover works smoothly over the button */
    z-index: 2;
}

.button:hover .button-text {
    opacity: 1;
}

.button img {
    width: 40px;
    height: 40px;
    cursor: pointer;
    border-radius: 8px;
    filter: invert(0); /* Start as white (for dark mode) */
    transition: transform 0.3s; /* Only transition for scaling effect */
    z-index: 2;
}

.button img:hover {
    transform: scale(1.1);
}

/* Light mode changes button images and text */
.light-mode .button-text {
    color: black; /* Fade-in text in black for light mode */
}
.light-mode .button img {
    filter: invert(1); /* Switch to dark (black) for light mode */
}

.footer {
    position: fixed;
    bottom: 0;
    width: 100%;
    background-color: rgba(0, 0, 0, 0); /* Optional: Footer background color */
    padding: 0px 0;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 100;
}

.grid-container {
    display: grid;
    grid-template-columns: repeat(4, 1fr); /* Up to 4 frames across */
    grid-template-rows: auto; /* Automatically adjust row height */
    gap: 20px; /* Spacing between frames */
    justify-content: center; /* Center the grid in the container */
    align-items: start; /* Align items to the top */
    max-width: 1200px; /* Set a max width for the grid */
    margin: auto; /* Center the grid horizontally */
    position: relative; /* For absolute positioning of frames */
}

.frame {
    background-color: #03050a; /* Solid dark background */
    border: 1px solid rgba(255, 255, 255, 0.3); /* Light border */
    border-radius: 8px; /* Rounded corners */
    display: flex; /* Use flexbox for layout */
    flex-direction: column; /* Stack items vertically */
    justify-content: flex-start; /* Align items to the top */
    overflow: hidden; /* Hide overflow */
    width: 300px; /* Set frame width */
    height: 400px; /* Set frame height */
    position: relative; /* To contain absolutely positioned child elements */
    z-index: 2; /* Ensure it appears above the background */
}

.frame img {
    width: 100%; /* Make image responsive */
    height: 200px; /* Adjust image height */
    object-fit: cover; /* Cover the area without stretching */
}

.frame-content {
    padding: 10px; /* Add padding for better spacing */
    color: white; /* Text color inside frames */
    flex-grow: 1; /* Allow content to take available space */
    display: flex; /* Flex for vertical alignment */
    flex-direction: column; /* Stack content */
    background-color: #080d1a9a; /* Slightly lighter background for content */
    border-radius: 0 0 8px 8px; /* Rounded corners for the bottom of the content */
}

.frame-name {
    font-family: 'Roboto', sans-serif; /* Same font as before */
    font-size: 1.5em; /* Font size for project name */
    font-weight: bold; /* Bold font for emphasis */
}

.frame-date {
    font-family: 'Inter', sans-serif; /* Same font as before */
    font-size: 0.9em; /* Smaller font size for the date */
    color: #ccc; /* Light gray for the date */
}

.frame-description {
    font-family: 'Inter', sans-serif; /* Same font as before */
    font-size: 0.9em; /* Standard size for description */
    margin: 10px 0; /* Margin for spacing */
    flex-grow: 1; /* Allow description to grow */
}

.frame-skills {
    display: flex; /* Use flexbox for layout */
    flex-wrap: wrap; /* Allow skills to wrap */
    margin-top: 10px; /* Space above skills */
}

.skill {
    font-family: 'Inter', sans-serif; /* Same font as before */
    background-color: #101729; /* Light background for skills */
    color: white; /* White text for visibility */
    padding: 5px 10px; /* Padding for skill items */
    border-radius: 5px; /* Rounded corners for skill items */
    margin: 2px; /* Small margin between skills */
    font-size: 0.8em; /* Smaller font size for skills */
}


/* Add styles for project frames in light mode */
.light-mode .frame {
    background-color: #f4f4f4; /* Light background */
    border: 1px solid rgba(0, 0, 0, 0.3); /* Dark border */
}

.light-mode .frame-content {
    background-color: #ffffff; /* White background for content */
    color: #000; /* Black text for visibility */
}

.light-mode .frame-name, .light-mode .frame-date, .light-mode .frame-description {
    color: #000; /* Black text for project details */
}

.light-mode .skill {
    background-color: rgba(0, 0, 0, 0.1); /* Lighter background for skills */
    color: black; /* Dark text for skills */
}
